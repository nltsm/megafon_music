;(function (window, undefined) {	var modules = {};	window.app = {		addModule: function (moduleName, fn, call) {			call = call || false;			if (modules[moduleName]) {				console.error('Module "' + moduleName + '" exists');				return;			}			modules[moduleName] = fn;			modules[moduleName]['called'] = false;			if (call == true) {				app.callModule(moduleName);			}		},		callModule: function (moduleName) {			if (typeof modules[moduleName]['init'] == 'function') {				try {					if (!modules[moduleName]['called']) {						modules[moduleName]['init']();						modules[moduleName]['called'] = true;					} else {						console.error('Module was already called');					}				}				catch(e) {					console.error(e);				}			}		},		initModules: function () {			for (var moduleName in modules) {				try {					modules[moduleName] = new modules[moduleName]() || {};				}				catch(e) {					console.error(e);				}			}		},		getModules: function () {			return modules;		},		getModule: function (moduleName) {			if (modules[moduleName]) {				return modules[moduleName];			} else {				console.error("Module doesn't exist");			}		},		callModules: function () {			this.initModules();			for (var module in modules) {				app.callModule(module);			}		}	};})(window, undefined);
function randomInteger(min, max) {	var rand = min + Math.random() * (max - min);	rand = Math.round(rand);	return rand;}window.click = function (el, fn) {	if (fn) {		$(document).on('click', el, fn);	} else {		$(document).on('click', el);	}};var videoPlayer, audioPlayer, tracks = [];var playerLang = {	restart: 'Restart',	rewind: 'Rewind {seektime}s',	play: 'Играть',	pause: 'Пауза',	fastForward: 'Forward {seektime}s',	seek: 'Seek',	seekLabel: '{currentTime} of {duration}',	played: 'Played',	buffered: 'Buffered',	currentTime: 'Current time',	duration: 'Duration',	volume: 'Volume',	mute: 'Mute',	unmute: 'Unmute',	enableCaptions: 'Enable captions',	disableCaptions: 'Disable captions',	download: 'Download',	enterFullscreen: 'Enter fullscreen',	exitFullscreen: 'Exit fullscreen',	frameTitle: 'Player for {title}',	captions: 'Captions',	settings: 'Settings',	menuBack: 'Go back to previous menu',	speed: 'Скорость',	normal: 'Обычная',	quality: 'Quality',	loop: 'Loop',	start: 'Start',	end: 'End',	all: 'All',	reset: 'Reset',	disabled: 'Disabled',	enabled: 'Enabled',	advertisement: 'Ad',};